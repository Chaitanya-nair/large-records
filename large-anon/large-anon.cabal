cabal-version:      2.4
name:               large-anon
version:            0.1.0.0
synopsis:           Scalable anonymous records
description:        The @large-anon@ package provides support for anonymous
                    records in Haskell, with a focus on compile-time (and
                    run-time) scalability.
bug-reports:        https://github.com/well-typed/large-records/issues
license:            BSD-3-Clause
author:             Edsko de Vries
maintainer:         edsko@well-typed.com
category:           Records
extra-source-files: CHANGELOG.md
tested-with:        GHC ==8.8.4 || ==8.10.7 || ==9.0.2

library
  exposed-modules:
      Data.Record.Anon
      Data.Record.Anon.Simple
      Data.Record.Anon.Advanced
      Data.Record.Anon.Plugin
      Data.Record.Anon.Plugin.Internal.Runtime

  other-modules:
      -- The modules in @Core.*@ can only import from other modules in @Core.*@,
      -- and cannot import from @.Runtime@. See detailed discussion in
      -- "Data.Record.Anon.Plugin.Internal.Runtime".

      Data.Record.Anon.Internal.Core.Canonical
      Data.Record.Anon.Internal.Core.Diff
      Data.Record.Anon.Internal.Core.FieldName
      Data.Record.Anon.Internal.Core.Util.SmallHashMap
      Data.Record.Anon.Internal.Core.Util.StrictVector

      Data.Record.Anon.Internal.Reflection
      Data.Record.Anon.Internal.Advanced
      Data.Record.Anon.Internal.Simple

      Data.Record.Anon.Internal.Plugin

      Data.Record.Anon.Internal.Plugin.TC.Constraints.AllFields
      Data.Record.Anon.Internal.Plugin.TC.Constraints.KnownFields
      Data.Record.Anon.Internal.Plugin.TC.Constraints.KnownHash
      Data.Record.Anon.Internal.Plugin.TC.Constraints.Project
      Data.Record.Anon.Internal.Plugin.TC.Constraints.RowHasField
      Data.Record.Anon.Internal.Plugin.TC.EquivClasses
      Data.Record.Anon.Internal.Plugin.TC.GhcTcPluginAPI
      Data.Record.Anon.Internal.Plugin.TC.NameResolution
      Data.Record.Anon.Internal.Plugin.TC.Parsing
      Data.Record.Anon.Internal.Plugin.TC.Rewriter
      Data.Record.Anon.Internal.Plugin.TC.Row.KnownField
      Data.Record.Anon.Internal.Plugin.TC.Row.KnownRow
      Data.Record.Anon.Internal.Plugin.TC.Row.ParsedRow
      Data.Record.Anon.Internal.Plugin.TC.Solver
      Data.Record.Anon.Internal.Plugin.TC.TyConSubst

      Data.Record.Anon.Internal.Plugin.Source
      Data.Record.Anon.Internal.Plugin.Source.GhcShim
      Data.Record.Anon.Internal.Plugin.Source.Names
      Data.Record.Anon.Internal.Plugin.Source.NamingT
      Data.Record.Anon.Internal.Plugin.Source.Options

  build-depends:
      base             >= 4.13  && < 4.18

      -- TODO: Bounds
      -- TODO: Cull
    , aeson
    , containers
    , ghc-tcplugin-api >= 0.7.1
    , hashable
    , large-generics
    , mtl
    , optics-core
    , primitive
    , record-hasfield
    , sop-core
    , syb
    , typelet
    , vector

      -- TODO: Make this dependency optional (DEBUG flag)
    , recover-rtti >= 0.4.1

      -- Whatever version is bundled with ghc
    , ghc
  hs-source-dirs:
      src
  default-language:
      Haskell2010
  ghc-options:
      -Wall
      -Wredundant-constraints
      -Wno-unticked-promoted-constructors

  if impl(ghc >= 8.10)
    ghc-options: -Wunused-packages

test-suite test-large-anon
  default-language:
      Haskell2010
  type:
      exitcode-stdio-1.0
  hs-source-dirs:
      test
  main-is:
      TestLargeAnon.hs
  other-modules:
      Test.Infra.Generics
      Test.Infra.MarkStrictness
      Test.Infra.Discovery
      Test.Infra.DynRecord
      Test.Infra.DynRecord.Advanced
      Test.Infra.DynRecord.Simple
      Test.Prop.Record.Combinators.Constrained
      Test.Prop.Record.Combinators.Simple
      Test.Prop.Record.Model
      Test.Prop.Record.Model.Generator
      Test.Prop.Record.Model.Orphans
      Test.Sanity.AllFields
      Test.Sanity.Applicative
      Test.Sanity.BlogPost
      Test.Sanity.CheckCanProject
      Test.Sanity.Discovery
      Test.Sanity.DuplicateFields
      Test.Sanity.Generics
      Test.Sanity.HasField
      Test.Sanity.Intersection
      Test.Sanity.Merging
      Test.Sanity.Named.Record1
      Test.Sanity.Named.Record2
      Test.Sanity.PolyKinds
      Test.Sanity.RecordLens
      Test.Sanity.Simple
      Test.Sanity.SrcPlugin.WithoutTypelet
      Test.Sanity.SrcPlugin.WithTypelet
      Test.Sanity.TypeLevelMetadata
  build-depends:
      -- TODO: Re-export some basic definitions from .Anon (e.g., HasField),
      -- then cull this list.
      base
    , aeson
    , aeson-pretty
    , bytestring
    , large-anon
    , large-generics
    , mtl
    , optics-core
    , parsec
    , QuickCheck
    , record-dot-preprocessor
    , record-hasfield
    , sop-core
    , tasty
    , tasty-hunit
    , tasty-quickcheck
    , text
    , typelet
    , validation-selective
  ghc-options:
      -Wall
      -Wredundant-constraints
      -Wno-unticked-promoted-constructors
      -fno-show-valid-hole-fits

  if impl(ghc >= 8.10)
    ghc-options: -Wunused-packages

  if impl(ghc >= 9.0.1)
    -- Work out ghc problem. See more detailed discussion in large-records.
    ghc-options: -Wno-unused-imports

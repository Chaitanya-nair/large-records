cabal-version:      2.4
name:               large-anon
version:            0.1.0.0
synopsis:           Scalable anonymous records
description:        The @large-anon@ package provides support for anonymous
                    records in Haskell, with a focus on compile-time (and
                    run-time) scalability.
bug-reports:        https://github.com/well-typed/large-amnon/issues
license:            BSD-3-Clause
author:             Edsko de Vries
maintainer:         edsko@well-typed.com
category:           Records
extra-source-files: CHANGELOG.md
tested-with:        GHC ==8.8.4 || ==8.10.7 || ==9.0.2

library
  exposed-modules:
      Data.Record.Anonymous.Simple
      Data.Record.Anonymous.Advanced
      Data.Record.Anonymous.Plugin
      Data.Record.Anonymous.Discovery

      -- Exposed for the benefit of the plugin/docspec
      -- TODO: Reconsider if we need to export all of this.
      Data.Record.Anonymous.Internal.Canonical
      Data.Record.Anonymous.Internal.Combinators.Constrained
      Data.Record.Anonymous.Internal.Combinators.Simple
      Data.Record.Anonymous.Internal.Constraints
      Data.Record.Anonymous.Internal.Diff
      Data.Record.Anonymous.Internal.Evidence
      Data.Record.Anonymous.Internal.Generics
      Data.Record.Anonymous.Internal.Record
      Data.Record.Anonymous.Internal.Row.FieldName
      Data.Record.Anonymous.Internal.Row.KnownField
      Data.Record.Anonymous.Internal.Row.KnownRow
      Data.Record.Anonymous.Internal.Row.ParsedRow
      Data.Record.Anonymous.Internal.Rep
      Data.Record.Anonymous.Internal.Row
      Data.Record.Anonymous.Internal.StrictVector

      -- Exposed for the benefit of cabal-docspec
      Data.Record.Anonymous.TcPlugin.EquivClasses
  other-modules:

      Data.Record.Anonymous.SrcPlugin
      Data.Record.Anonymous.SrcPlugin.Names
      Data.Record.Anonymous.SrcPlugin.GhcShim

      Data.Record.Anonymous.TcPlugin.Constraints.AllFields
      Data.Record.Anonymous.TcPlugin.Constraints.HasField
      Data.Record.Anonymous.TcPlugin.Constraints.KnownFields
      Data.Record.Anonymous.TcPlugin.Constraints.KnownHash
      Data.Record.Anonymous.TcPlugin.Constraints.Project
      Data.Record.Anonymous.TcPlugin.GhcTcPluginAPI
      Data.Record.Anonymous.TcPlugin.NameResolution
      Data.Record.Anonymous.TcPlugin.Parsing
      Data.Record.Anonymous.TcPlugin.Rewriter
      Data.Record.Anonymous.TcPlugin.Solver
      Data.Record.Anonymous.TcPlugin.TyConSubst
  other-extensions:
  build-depends:
      base             >= 4.13  && < 4.18

      -- TODO: Bounds
      -- TODO: Cull
    , aeson
    , containers
    , ghc-tcplugin-api >= 0.7.1
    , hashable
    , large-generics
    , mtl
    , record-hasfield
    , sop-core
    , text
    , unordered-containers
    , vector
    , syb

      -- TODO: Make this dependency optional (DEBUG flag)
    , recover-rtti >= 0.4.1

      -- Whatever version is bundled with ghc
    , ghc
  hs-source-dirs:
      src
  default-language:
      Haskell2010
  ghc-options:
      -Wall
      -Wredundant-constraints
      -Wno-unticked-promoted-constructors

test-suite test-large-anon
  default-language:
      Haskell2010
  type:
      exitcode-stdio-1.0
  hs-source-dirs:
      test
  main-is:
      TestLargeAnon.hs
  other-modules:
      Test.Infra.MarkStrictness
      Test.Infra.DynRecord
      Test.Infra.DynRecord.Advanced
      Test.Infra.DynRecord.Simple
      Test.Prop.Record.Combinators.Constrained
      Test.Prop.Record.Combinators.Simple
      Test.Prop.Record.Model
      Test.Prop.Record.Model.Generator
      Test.Prop.Record.Model.Orphans
      Test.Sanity.AllFields
      Test.Sanity.Applicative
      Test.Sanity.Discovery
      Test.Sanity.DuplicateFields
      Test.Sanity.Generics
      Test.Sanity.HasField
      Test.Sanity.Lens
      Test.Sanity.Merging
      Test.Sanity.Named.Record1
      Test.Sanity.Named.Record2
      Test.Sanity.PolyKinds
      Test.Sanity.Simple
      Test.Sanity.SrcPlugin.WithoutTypelet
      Test.Sanity.TypeLevelMetadata
  build-depends:
      base
    , aeson
    , large-anon
    , mtl
    , QuickCheck
    , tasty
    , tasty-hunit
    , tasty-quickcheck
    , validation-selective

      -- TODO: The dependencies below are unfortunate, and /should/ not be
      -- necessary: users should not have to declare dependencies on
      -- dependencies of large-anon.
      --
      -- Matthew: I would change findImportedModule to instead use
      -- moduleNameProvidersMap; or you can use lookupModuleWithSuggestions
      -- (this avoids the need to declare the dependency here)
    , large-generics
    , record-hasfield
    , sop-core
  ghc-options:
      -Wall
      -Wno-unticked-promoted-constructors
      -fno-show-valid-hole-fits

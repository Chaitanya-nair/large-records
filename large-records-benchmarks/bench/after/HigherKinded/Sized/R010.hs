{-# LANGUAGE ConstraintKinds           #-}
{-# LANGUAGE DataKinds                 #-}
{-# LANGUAGE ExistentialQuantification #-}
{-# LANGUAGE FlexibleContexts          #-}
{-# LANGUAGE FlexibleInstances         #-}
{-# LANGUAGE MultiParamTypeClasses     #-}
{-# LANGUAGE ScopedTypeVariables       #-}
{-# LANGUAGE StandaloneDeriving        #-}
{-# LANGUAGE TemplateHaskell           #-}
{-# LANGUAGE TemplateHaskell           #-}
{-# LANGUAGE TypeFamilies              #-}
{-# LANGUAGE UndecidableInstances      #-}

#if PROFILE_CORESIZE
{-# OPTIONS_GHC -ddump-to-file -ddump-ds-preopt -ddump-ds -ddump-simpl #-}
#endif
#if PROFILE_TIMING
{-# OPTIONS_GHC -ddump-to-file -ddump-timings #-}
#endif

module HigherKinded.Sized.R010 where

import Data.Record.TH

import Bench.TH

largeRecord defaultLazyOptions (higherKindedRecordOfSize 10)

-- Complains about
--
-- > No instance for (Data.Functor.Classes.Show1 r)
-- >   arising from a use of ‘show’
--
-- which is what we want: @ghc@ has simplified all 10 constraints on each
-- individual field (generated by 'largeRecord') to a single constraint on @r@.
--
-- TODO: Perhaps should move this to the tests (and test it with docspec).
--
-- checkInferredType :: HKR r -> String
-- checkInferredType (r :: HKR f) = show r
